import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/navbar";
import { cookies } from "next/headers";
import { MainDomain } from "@/lib/domain";
import UserAuthentication from "@/components/UserAuthentication";
import { ToastContainer } from "react-toastify";
import ReactQueryProvider from "@/components/reactQueryProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
export type UserLoggedData = {
  email: string;
  name: string;
  userId: number;
};
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const token = await (await cookies()).get("token");
  let userData: UserLoggedData = {
    email: "",
    name: "",
    userId: 0,
  };
  if (token) {
    const res = await fetch(`${MainDomain}/api/auth/user-info`, {
      headers: {
        Authorization: token.value,
      },
    }).then((response) => response.json());

    userData = res as UserLoggedData;
  }
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <div className="container mx-auto flex flex-col gap-3">
          <UserAuthentication userData={userData}>
            <ReactQueryProvider>
              <Navbar />
              {children}
            </ReactQueryProvider>
          </UserAuthentication>
        </div>
        <ToastContainer />
      </body>
    </html>
  );
}
